{"version":3,"sources":["Task.js","Column.js","initialData.js","App.js","index.js"],"names":["Task","props","React","createElement","Draggable","draggableId","task","id","index","provided","Object","assign","className","draggableProps","dragHandleProps","ref","innerRef","content","Column","column","title","Droppable","droppableId","droppableProps","tasks","map","key","placeholder","initialData","columns","taskIds","columnOrder","App","_step","_useState","useState","_useState2","_slicedToArray","data","setData","columnTasks","_iterator","_createForOfIteratorHelper","s","n","done","columnId","value","taskId","err","e","f","DragDropContext","onDragEnd","result","source","destination","newTaskIds","Array","from","_newTaskIds$splice","splice","removed","newColumn","_objectSpread","_defineProperty","_objectSpread3","sourceColumn","destColumn","sourceTaskIds","destTaskIds","_sourceTaskIds$splice","newSourceColumn","newDestColumn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAmBeA,MAjBf,SAAcC,GAEZ,OACEC,IAAAC,cAACC,IAAS,CAACC,YAAaJ,EAAMK,KAAKC,GAAIC,MAAOP,EAAMO,QACjD,SAAAC,GAAQ,OACPP,IAAAC,cAAA,MAAAO,OAAAC,OAAA,CAAKC,UAAU,gBACTH,EAASI,eACTJ,EAASK,gBAAe,CAC5BC,IAAKN,EAASO,WAEbf,EAAMK,KAAKW,aCaPC,MArBf,SAAgBjB,GACZ,OAEIC,IAAAC,cAAA,OAAKS,UAAU,uBACbV,IAAAC,cAAA,OAAKS,UAAU,yCAAyCX,EAAMkB,OAAOC,OACrElB,IAAAC,cAACkB,IAAS,CAACC,YAAarB,EAAMkB,OAAOZ,KAClC,SAAAE,GAAQ,OACPP,IAAAC,cAAA,MAAAO,OAAAC,OAAA,CAAKI,IAAKN,EAASO,UAAcP,EAASc,gBACvCtB,EAAMuB,MAAMC,KAAI,SAACnB,EAAME,GAAK,OAC3BN,IAAAC,cAACH,EAAI,CAAC0B,IAAKpB,EAAKC,GAAID,KAAMA,EAAME,MAAOA,OAExCC,EAASkB,kBCwBXC,EArCK,CAClBJ,MAAO,CACL,SAAU,CAAEjB,GAAI,SAAUU,QAAS,wBACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,0BACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,mBACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,eACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,cACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,YACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,kBACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,aACnC,SAAU,CAAEV,GAAI,SAAUU,QAAS,cACnC,UAAW,CAAEV,GAAI,UAAWU,QAAS,aACrC,UAAW,CAAEV,GAAI,UAAWU,QAAS,WACrC,UAAW,CAAEV,GAAI,UAAWU,QAAS,eAEvCY,QAAS,CACP,WAAY,CACVtB,GAAI,WACJa,MAAO,QACPU,QAAS,CAAC,SAAU,SAAU,SAAU,WAE1C,WAAY,CACVvB,GAAI,WACJa,MAAO,cACPU,QAAS,CAAC,UAAW,SAAU,SAAU,WAE3C,WAAY,CACVvB,GAAI,WACJa,MAAO,UACPU,QAAS,CAAC,SAAU,SAAU,UAAW,aAI7CC,YAAa,CAAC,WAAY,WAAY,a,WC0DzBC,MApFf,WACE,IAGuCC,EAHvCC,EAAwBC,mBAASP,GAAYQ,EAAAC,YAAAH,EAAA,GAAtCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAc,GAAGC,EAAAC,YACAJ,EAAKP,aAAW,IAAvC,IAAAU,EAAAE,MAAAV,EAAAQ,EAAAG,KAAAC,MAAyC,CAAC,IAA/BC,EAAQb,EAAAc,MACjBP,EAAYM,GAAYR,EAAKT,QAAQiB,GAAUhB,QAAQL,KAAI,SAAAuB,GAAM,OAAIV,EAAKd,MAAMwB,OACjF,MAAAC,GAAAR,EAAAS,EAAAD,GAAA,QAAAR,EAAAU,IAuDD,OACEjD,IAAAC,cAAA,OAAKS,UAAU,2BAEbV,IAAAC,cAAA,OAAKS,UAAU,qCACXV,IAAAC,cAAA,UAAI,oBAGRD,IAAAC,cAAA,OAAKS,UAAU,+CACXV,IAAAC,cAACiD,IAAe,CAACC,UA7DP,SAACC,GACjB,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YAEhB,GAAKA,EAIL,GAAID,EAAOjC,cAAgBkC,EAAYlC,YAAa,CAClD,IAAMH,EAASmB,EAAKT,QAAQ0B,EAAOjC,aAC7BmC,EAAaC,MAAMC,KAAKxC,EAAOW,SACrC8B,EAAkBH,EAAWI,OAAON,EAAO/C,MAAO,GAA3CsD,EAA6CzB,YAAAuB,EAAA,GAAtC,GACdH,EAAWI,OAAOL,EAAYhD,MAAO,EAAGsD,GAExC,IAAMC,EAASC,wBAAA,GACV7C,GAAM,IACTW,QAAS2B,IAGXlB,EAAOyB,wBAAC,GACH1B,GAAI,IACPT,QAAOmC,wBAAA,GACF1B,EAAKT,SAAO,GAAAoC,YAAA,GACdF,EAAUxD,GAAKwD,WAGf,CAAC,IAADG,EACCC,EAAe7B,EAAKT,QAAQ0B,EAAOjC,aACnC8C,EAAa9B,EAAKT,QAAQ2B,EAAYlC,aACtC+C,EAAgBX,MAAMC,KAAKQ,EAAarC,SACxCwC,EAAcZ,MAAMC,KAAKS,EAAWtC,SAC1CyC,EAAkBF,EAAcR,OAAON,EAAO/C,MAAO,GAA9CsD,EAAgDzB,YAAAkC,EAAA,GAAzC,GACdD,EAAYT,OAAOL,EAAYhD,MAAO,EAAGsD,GAEzC,IAAMU,EAAeR,wBAAA,GAChBG,GAAY,IACfrC,QAASuC,IAELI,EAAaT,wBAAA,GACdI,GAAU,IACbtC,QAASwC,IAGX/B,EAAOyB,wBAAC,GACH1B,GAAI,IACPT,QAAOmC,wBAAA,GACF1B,EAAKT,SAAO,IAAAqC,EAAA,GAAAD,YAAAC,EACdM,EAAgBjE,GAAKiE,GAAeP,YAAAC,EACpCO,EAAclE,GAAKkE,GAAaP,UAepC5B,EAAKP,YAAYN,KAAI,SAACqB,GAAQ,OAC7B5C,IAAAC,cAACe,EAAM,CAACQ,IAAKY,EAAKT,QAAQiB,GAAUvC,GAAIY,OAAQmB,EAAKT,QAAQiB,GAAWtB,MAAOgB,EAAYM,YC1EnG4B,IAASC,OACPzE,IAAAC,cAACD,IAAM0E,WAAU,KACf1E,IAAAC,cAAC6B,EAAG,OAEN6C,SAASC,eAAe,U","file":"static/js/main.07003d0b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Draggable} from 'react-beautiful-dnd';\r\nfunction Task(props) {\r\n  \r\n  return (\r\n    <Draggable draggableId={props.task.id} index={props.index}>\r\n      {provided => (\r\n        <div className='px-2 custom4'\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          {props.task.content}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n\r\n\r\n  ","import React from 'react';\r\nimport Task from './Task';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nfunction Column(props) {\r\n    return (\r\n     \r\n        <div className='m-2 custom2 custom4'>\r\n          <div className='d-flex justify-content-center custom3'>{props.column.title}</div>\r\n          <Droppable droppableId={props.column.id}>\r\n            {provided => (\r\n              <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                {props.tasks.map((task, index) => (\r\n                  <Task key={task.id} task={task} index={index} />\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n\r\n      \r\n    );\r\n}\r\n\r\nexport default Column;\r\n\r\n\r\n\r\n\r\n  ","\r\n\r\nconst initialData = {\r\n  tasks: {\r\n    'task-1': { id: 'task-1', content: 'Take out the garbage' },\r\n    'task-2': { id: 'task-2', content: 'Watch my favorite show' },\r\n    'task-3': { id: 'task-3', content: 'Charge my phone' },\r\n    'task-4': { id: 'task-4', content: 'Cook dinner' },\r\n    'task-5': { id: 'task-5', content: 'cook beans' },\r\n    'task-6': { id: 'task-6', content: 'Watch tv' },\r\n    'task-7': { id: 'task-7', content: 'cook breakfast' },\r\n    'task-8': { id: 'task-8', content: 'read book' },\r\n    'task-9': { id: 'task-9', content: 'have lunch' },\r\n    'task-10': { id: 'task-10', content: 'go to bed' },\r\n    'task-11': { id: 'task-11', content: 'workout' },\r\n    'task-12': { id: 'task-12', content: 'watch news' },\r\n  },\r\n  columns: {\r\n    'column-1': {\r\n      id: 'column-1',\r\n      title: 'To do',\r\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\r\n    },\r\n    'column-2': {\r\n      id: 'column-2',\r\n      title: 'In Progress',\r\n      taskIds: ['task-12', 'task-5', 'task-6', 'task-7'],\r\n    },\r\n    'column-3': {\r\n      id: 'column-3',\r\n      title: 'Pending',\r\n      taskIds: ['task-8', 'task-9', 'task-10', 'task-11'],\r\n    },\r\n\r\n  },\r\n  columnOrder: ['column-1', 'column-2', 'column-3' ],\r\n};\r\n\r\n\r\nexport default initialData;\r\n\r\n\r\n  ","import React, { useState } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport Column from './Column';\r\nimport initialData from './initialData';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css'\r\n\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(initialData);\r\n\r\n  const columnTasks = {};\r\n  for (const columnId of data.columnOrder) {\r\n    columnTasks[columnId] = data.columns[columnId].taskIds.map(taskId => data.tasks[taskId]);\r\n  }\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const column = data.columns[source.droppableId];\r\n      const newTaskIds = Array.from(column.taskIds);\r\n      const [removed] = newTaskIds.splice(source.index, 1);\r\n      newTaskIds.splice(destination.index, 0, removed);\r\n\r\n      const newColumn = {\r\n        ...column,\r\n        taskIds: newTaskIds,\r\n      };\r\n\r\n      setData({\r\n        ...data,\r\n        columns: {\r\n          ...data.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      });\r\n    } else {\r\n      const sourceColumn = data.columns[source.droppableId];\r\n      const destColumn = data.columns[destination.droppableId];\r\n      const sourceTaskIds = Array.from(sourceColumn.taskIds);\r\n      const destTaskIds = Array.from(destColumn.taskIds);\r\n      const [removed] = sourceTaskIds.splice(source.index, 1);\r\n      destTaskIds.splice(destination.index, 0, removed);\r\n\r\n      const newSourceColumn = {\r\n        ...sourceColumn,\r\n        taskIds: sourceTaskIds,\r\n      };\r\n      const newDestColumn = {\r\n        ...destColumn,\r\n        taskIds: destTaskIds,\r\n      };\r\n\r\n      setData({\r\n        ...data,\r\n        columns: {\r\n          ...data.columns,\r\n          [newSourceColumn.id]: newSourceColumn,\r\n          [newDestColumn.id]: newDestColumn,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid custom1'>\r\n          \r\n      <div className='d-flex p-3 justify-content-center'>\r\n          <h1>My Kanban board</h1>\r\n      </div>\r\n \r\n      <div className='d-flex flex-wrap justify-content-center p-2'>\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n      {data.columnOrder.map((columnId) => (\r\n        <Column key={data.columns[columnId].id} column={data.columns[columnId]} tasks={columnTasks[columnId]} />\r\n      ))}\r\n    </DragDropContext>\r\n    </div>\r\n\r\n  \r\n    </div>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.css'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}